// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.3
// source: text_analys.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TextAnalysServiceClient is the client API for TextAnalysService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TextAnalysServiceClient interface {
	GetResult(ctx context.Context, in *SettingsTextPB, opts ...grpc.CallOption) (*ResultParsingPB, error)
}

type textAnalysServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTextAnalysServiceClient(cc grpc.ClientConnInterface) TextAnalysServiceClient {
	return &textAnalysServiceClient{cc}
}

func (c *textAnalysServiceClient) GetResult(ctx context.Context, in *SettingsTextPB, opts ...grpc.CallOption) (*ResultParsingPB, error) {
	out := new(ResultParsingPB)
	err := c.cc.Invoke(ctx, "/Text_analys.TextAnalysService/getResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TextAnalysServiceServer is the server API for TextAnalysService service.
// All implementations must embed UnimplementedTextAnalysServiceServer
// for forward compatibility
type TextAnalysServiceServer interface {
	GetResult(context.Context, *SettingsTextPB) (*ResultParsingPB, error)
	mustEmbedUnimplementedTextAnalysServiceServer()
}

// UnimplementedTextAnalysServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTextAnalysServiceServer struct {
}

func (UnimplementedTextAnalysServiceServer) GetResult(context.Context, *SettingsTextPB) (*ResultParsingPB, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResult not implemented")
}
func (UnimplementedTextAnalysServiceServer) mustEmbedUnimplementedTextAnalysServiceServer() {}

// UnsafeTextAnalysServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TextAnalysServiceServer will
// result in compilation errors.
type UnsafeTextAnalysServiceServer interface {
	mustEmbedUnimplementedTextAnalysServiceServer()
}

func RegisterTextAnalysServiceServer(s grpc.ServiceRegistrar, srv TextAnalysServiceServer) {
	s.RegisterService(&TextAnalysService_ServiceDesc, srv)
}

func _TextAnalysService_GetResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingsTextPB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextAnalysServiceServer).GetResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Text_analys.TextAnalysService/getResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextAnalysServiceServer).GetResult(ctx, req.(*SettingsTextPB))
	}
	return interceptor(ctx, in, info, handler)
}

// TextAnalysService_ServiceDesc is the grpc.ServiceDesc for TextAnalysService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TextAnalysService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Text_analys.TextAnalysService",
	HandlerType: (*TextAnalysServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getResult",
			Handler:    _TextAnalysService_GetResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "text_analys.proto",
}
